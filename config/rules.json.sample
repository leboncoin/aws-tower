{
  "version": "2.1.0",
  "types": {
    "security_group": {
      "description": "Check each rule on each security group and on each source",
      "findings": [
        {
          "message": {
            "text": "[{name}] Allow connection to specific port (or range) from public network ({source}=>{ports})",
            "args": {
              "name": {
                "type": "variable",
                "variable": "sg_name"
              },
              "source": {
                "type": "variable",
                "variable": "source"
              },
              "ports": {
                "type": "variable",
                "variable": "ports"
              }
            }
          },
          "rules": [
            {
              "type": "is_ports",
              "description": "Check if ports is a specific port (or range) (like 9000-9001)",
              "conditions": [
                {
                  "type": "constant",
                  "name": "is_ports",
                  "value": true
                }
              ],
              "data_sources": [
                {
                  "type": "variable",
                  "name": "source",
                  "value": "ports"
                }
              ]
            },
            {
              "type": "is_private_cidr",
              "description": "Check if source is not a private CIDR block - RFC 1918",
              "conditions": [
                {
                  "type": "constant",
                  "name": "is_private_cidr",
                  "value": false
                }
              ],
              "data_sources": [
                {
                  "type": "variable",
                  "name": "source",
                  "value": "source"
                }
              ]
            }
          ],
          "severity": "high"
        },
        {
          "message": {
            "text": "[{name}] Allow connection to all port from public network ({source}=>{ports})",
            "args": {
              "name": {
                "type": "variable",
                "variable": "sg_name"
              },
              "source": {
                "type": "variable",
                "variable": "source"
              },
              "ports": {
                "type": "variable",
                "variable": "ports"
              }
            }
          },
          "rules": [
            {
              "type": "in",
              "description": "Check if variable_in is in value_in",
              "conditions": [
                {
                  "type": "constant",
                  "name": "data_element",
                  "value": "all"
                }
              ],
              "data_sources": [
                {
                  "type": "variable",
                  "name": "data_list",
                  "value": "ports"
                }
              ]
            },
            {
              "type": "is_private_cidr",
              "description": "Check if source is not a private CIDR block - RFC 1918",
              "conditions": [
                {
                  "type": "constant",
                  "name": "is_private_cidr",
                  "value": false
                }
              ],
              "data_sources": [
                {
                  "type": "variable",
                  "name": "source",
                  "value": "source"
                }
              ]
            }
          ],
          "severity": "high"
        },
        {
          "message": {
            "text": "[{name}] Allow connection to all port from private network ({source}=>{ports})",
            "args": {
              "name": {
                "type": "variable",
                "variable": "sg_name"
              },
              "source": {
                "type": "variable",
                "variable": "source"
              },
              "ports": {
                "type": "variable",
                "variable": "ports"
              }
            }
          },
          "rules": [
            {
              "type": "in",
              "description": "Check if variable_in is in value_in",
              "conditions": [
                {
                  "type": "constant",
                  "name": "data_element",
                  "value": "all"
                }
              ],
              "data_sources": [
                {
                  "type": "variable",
                  "name": "data_list",
                  "value": "ports"
                }
              ]
            },
            {
              "type": "is_private_cidr",
              "description": "Check if source is a private CIDR block - RFC 1918",
              "conditions": [
                {
                  "type": "constant",
                  "name": "is_private_cidr",
                  "value": true
                }
              ],
              "data_sources": [
                {
                  "type": "variable",
                  "name": "source",
                  "value": "source"
                }
              ]
            }
          ],
          "severity": "medium"
        },
        {
          "message": {
            "text": "[{name}] Allow connection to specific port (or range) from private network ({source}=>{ports})",
            "args": {
              "name": {
                "type": "variable",
                "variable": "sg_name"
              },
              "source": {
                "type": "variable",
                "variable": "source"
              },
              "ports": {
                "type": "variable",
                "variable": "ports"
              }
            }
          },
          "rules": [
            {
              "type": "is_ports",
              "description": "Check if ports is a specific port (or range) (like 9000-9001)",
              "conditions": [
                {
                  "type": "constant",
                  "name": "is_ports",
                  "value": true
                }
              ],
              "data_sources": [
                {
                  "type": "variable",
                  "name": "source",
                  "value": "ports"
                }
              ]
            },
            {
              "type": "is_private_cidr",
              "description": "Check if source is a private CIDR block - RFC 1918",
              "conditions": [
                {
                  "type": "constant",
                  "name": "is_private_cidr",
                  "value": true
                }
              ],
              "data_sources": [
                {
                  "type": "variable",
                  "name": "source",
                  "value": "source"
                }
              ]
            }
          ],
          "severity": "low"
        }
      ]
    },
    "metadata": {
      "description": "Check each rule on an asset (named metadata)",
      "findings": [
        {
          "message": "No security group present",
          "severity": "info",
          "rules": [
            {
              "type": "not_in",
              "description": "Check if SecurityGroups is not in metadata",
              "conditions": [
                {
                  "type": "constant",
                  "name": "data_element",
                  "value": "SecurityGroups"
                }
              ],
              "data_sources": [
                {
                  "type": "variable",
                  "name": "data_list",
                  "value": "metadata"
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "DnsRecord: {dns_record}",
            "args": {
              "dns_record": {
                "type": "dict",
                "key": "DnsRecord",
                "variable": "metadata"
              }
            }
          },
          "severity": "medium",
          "rules": [
            {
              "type": "in",
              "description": "Check if DnsRecord is in metadata",
              "conditions": [
                {
                  "type": "constant",
                  "name": "data_element",
                  "value": "DnsRecord"
                }
              ],
              "data_sources": [
                {
                  "type": "variable",
                  "name": "data_list",
                  "value": "metadata"
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "ACL BlockPublicAcls not enabled for {s3_type}",
            "args": {
              "s3_type": {
                "type": "dict",
                "key": "Type",
                "variable": "metadata"
              }
            }
          },
          "severity": "low",
          "rules": [
            {
              "type": "not_in",
              "description": "Check if BlockPublicAcls is not in metadata",
              "conditions": [
                {
                  "type": "constant",
                  "name": "data_element",
                  "value": "ACL: BlockPublicAcls"
                }
              ],
              "data_sources": [
                {
                  "type": "variable",
                  "name": "data_list",
                  "value": "metadata"
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "ACL BlockPublicPolicy not enabled for {s3_type}",
            "args": {
              "s3_type": {
                "type": "dict",
                "key": "Type",
                "variable": "metadata"
              }
            }
          },
          "severity": "low",
          "rules": [
            {
              "type": "not_in",
              "description": "Check if BlockPublicPolicy is not in metadata",
              "conditions": [
                {
                  "type": "constant",
                  "name": "data_element",
                  "value": "ACL: BlockPublicPolicy"
                }
              ],
              "data_sources": [
                {
                  "type": "variable",
                  "name": "data_list",
                  "value": "metadata"
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "ACL IgnorePublicAcls not enabled for {s3_type}",
            "args": {
              "s3_type": {
                "type": "dict",
                "key": "Type",
                "variable": "metadata"
              }
            }
          },
          "severity": "medium",
          "rules": [
            {
              "type": "not_in",
              "description": "Check if IgnorePublicAcls is not in metadata",
              "conditions": [
                {
                  "type": "constant",
                  "name": "data_element",
                  "value": "ACL: IgnorePublicAcls"
                }
              ],
              "data_sources": [
                {
                  "type": "variable",
                  "name": "data_list",
                  "value": "metadata"
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "ACL RestrictPublicBuckets not enabled for {s3_type}",
            "args": {
              "s3_type": {
                "type": "dict",
                "key": "Type",
                "variable": "metadata"
              }
            }
          },
          "severity": "low",
          "rules": [
            {
              "type": "not_in",
              "description": "Check if RestrictPublicBuckets is not in metadata",
              "conditions": [
                {
                  "type": "constant",
                  "name": "data_element",
                  "value": "ACL: RestrictPublicBuckets"
                }
              ],
              "data_sources": [
                {
                  "type": "variable",
                  "name": "data_list",
                  "value": "metadata"
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "ACL: All Users: {rights}",
            "args": {
              "rights": {
                "type": "dict",
                "key": "ACL: All Users",
                "variable": "metadata"
              }
            }
          },
          "severity": "high",
          "rules": [
            {
              "type": "in",
              "description": "Check if ACL: All Users is in metadata",
              "conditions": [
                {
                  "type": "constant",
                  "name": "data_element",
                  "value": "ACL: All Users"
                }
              ],
              "data_sources": [
                {
                  "type": "variable",
                  "name": "data_list",
                  "value": "metadata"
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "ACL: Authenticated Users: {rights}",
            "args": {
              "rights": {
                "type": "dict",
                "key": "ACL: Authenticated Users",
                "variable": "metadata"
              }
            }
          },
          "severity": "high",
          "rules": [
            {
              "type": "in",
              "description": "Check if ACL: Authenticated Users is in metadata",
              "conditions": [
                {
                  "type": "constant",
                  "name": "data_element",
                  "value": "ACL: Authenticated Users"
                }
              ],
              "data_sources": [
                {
                  "type": "variable",
                  "name": "data_list",
                  "value": "metadata"
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "Deprecated mysql engine version ({current_version})",
            "args": {
              "current_version": {
                "type": "dict",
                "key": "Engine",
                "variable": "metadata"
              }
            }
          },
          "severity": "high",
          "rules": [
            {
              "type": "in",
              "description": "Check if Engine is in metadata",
              "conditions": [
                {
                  "type": "constant",
                  "name": "data_element",
                  "value": "Engine"
                }
              ],
              "data_sources": [
                {
                  "type": "variable",
                  "name": "data_list",
                  "value": "metadata"
                }
              ]
            },
            {
              "type": "engine_deprecated_version",
              "description": "Check if mysql engine is not deprecated",
              "conditions": [
                {
                  "type": "constant",
                  "name": "engine_name",
                  "value": "mysql"
                },
                {
                  "type": "constant",
                  "name": "versions",
                  "value": [
                    "5.2.0"
                  ]
                }
              ],
              "data_sources": [
                {
                  "type": "dict",
                  "name": "engine",
                  "value": "metadata",
                  "key": "Engine"
                }
              ]
            }
          ]
        },
        {
          "message": {
            "text": "Deprecated postgres engine version ({current_version})",
            "args": {
              "current_version": {
                "type": "dict",
                "key": "Engine",
                "variable": "metadata"
              }
            }
          },
          "severity": "high",
          "rules": [
            {
              "type": "in",
              "description": "Check if Engine is in metadata",
              "conditions": [
                {
                  "type": "constant",
                  "name": "data_element",
                  "value": "Engine"
                }
              ],
              "data_sources": [
                {
                  "type": "variable",
                  "name": "data_list",
                  "value": "metadata"
                }
              ]
            },
            {
              "type": "engine_deprecated_version",
              "description": "Check if postgres engine is not deprecated",
              "conditions": [
                {
                  "type": "constant",
                  "name": "engine_name",
                  "value": "postgres"
                },
                {
                  "type": "constant",
                  "name": "versions",
                  "value": [
                    "10.10",
                    "11.4"
                  ]
                }
              ],
              "data_sources": [
                {
                  "type": "dict",
                  "name": "engine",
                  "value": "metadata",
                  "key": "Engine"
                }
              ]
            }
          ]
        }
      ]
    }
  }
}
