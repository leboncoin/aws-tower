---
version: 4.3.0
types:
  security_group:
    description: Check each rule on each security group and on each source
    findings:
      - message:
          text: '[{name}] Allow connection to specific port (or range) from public network ({source}=>{ports})'
          args:
            name:
              type: variable
              variable: sg_name
            source:
              type: variable
              variable: source
            ports:
              type: variable
              variable: ports
        rules:
          - type: has_attribute_equal
            description: Check if the asset is public
            conditions:
              - type: constant
                name: attribute_value
                value: true
            data_sources:
              - type: attribute
                name: attribute_value
                value: public
          - type: is_ports
            description: Check if ports is a specific port (or range) (like 9000-9001)
            conditions:
              - type: constant
                name: is_ports
                value: true
            data_sources:
              - type: variable
                name: source
                value: ports
          - type: is_private_cidr
            description: Check if source is not a private CIDR block - RFC 1918
            conditions:
              - type: constant
                name: is_private_cidr
                value: false
            data_sources:
              - type: variable
                name: source
                value: source
        severity: high
        metadata:
          risks: ['WAN reachable asset']
          visibility: ['T1578.002', 'T1578.003', 'T1578.004']
          detection: ['T1578.002', 'T1578.003', 'T1578.004']
          protection: ['T1040', 'T1046', 'T1190', 'T1590.005', 'T1595.001']
      - message:
          text: '[{name}] Allow connection to all port from public network ({source}=>{ports})'
          args:
            name:
              type: variable
              variable: sg_name
            source:
              type: variable
              variable: source
            ports:
              type: variable
              variable: ports
        rules:
          - type: has_attribute_equal
            description: Check if the asset is public
            conditions:
              - type: constant
                name: attribute_value
                value: true
            data_sources:
              - type: attribute
                name: attribute_value
                value: public
          - type: in
            description: Check if variable_in is in value_in
            conditions:
              - type: constant
                name: data_element
                value: all
            data_sources:
              - type: variable
                name: data_list
                value: ports
          - type: is_private_cidr
            description: Check if source is not a private CIDR block - RFC 1918
            conditions:
              - type: constant
                name: is_private_cidr
                value: false
            data_sources:
              - type: variable
                name: source
                value: source
        severity: high
        metadata:
          risks: ['WAN reachable asset']
          visibility: ['T1578.002', 'T1578.003', 'T1578.004']
          detection: ['T1578.002', 'T1578.003', 'T1578.004']
          protection: ['T1040', 'T1046', 'T1190', 'T1590.005', 'T1595.001']
      - message:
          text: '[{name}] Allow connection to all port from private network ({source}=>{ports})'
          args:
            name:
              type: variable
              variable: sg_name
            source:
              type: variable
              variable: source
            ports:
              type: variable
              variable: ports
        rules:
          - type: has_attribute_equal
            description: Check if the asset is private
            conditions:
              - type: constant
                name: attribute_value
                value: false
            data_sources:
              - type: attribute
                name: attribute_value
                value: public
          - type: in
            description: Check if variable_in is in value_in
            conditions:
              - type: constant
                name: data_element
                value: all
            data_sources:
              - type: variable
                name: data_list
                value: ports
          - type: is_private_cidr
            description: Check if source is a private CIDR block - RFC 1918
            conditions:
              - type: constant
                name: is_private_cidr
                value: true
            data_sources:
              - type: variable
                name: source
                value: source
        severity: medium
        metadata:
          risks: ['LAN reachable asset']
          visibility: ['T1578.002', 'T1578.003', 'T1578.004']
          detection: ['T1578.002', 'T1578.003', 'T1578.004']
          protection: ['T1040', 'T1046']
      - message:
          text: '[{name}] Allow connection to specific port (or range) from private
            network ({source}=>{ports})'
          args:
            name:
              type: variable
              variable: sg_name
            source:
              type: variable
              variable: source
            ports:
              type: variable
              variable: ports
        rules:
          - type: has_attribute_equal
            description: Check if the asset is private
            conditions:
              - type: constant
                name: attribute_value
                value: false
            data_sources:
              - type: attribute
                name: attribute_value
                value: public
          - type: is_ports
            description: Check if ports is a specific port (or range) (like 9000-9001)
            conditions:
              - type: constant
                name: is_ports
                value: true
            data_sources:
              - type: variable
                name: source
                value: ports
          - type: is_private_cidr
            description: Check if source is a private CIDR block - RFC 1918
            conditions:
              - type: constant
                name: is_private_cidr
                value: true
            data_sources:
              - type: variable
                name: source
                value: source
        severity: low
        metadata:
          risks: ['LAN reachable asset']
          visibility: ['T1578.002', 'T1578.003', 'T1578.004']
          detection: ['T1578.002', 'T1578.003', 'T1578.004']
          protection: ['T1040', 'T1046']
  attributes:
    description: Check each rule on asset attributes
    findings:
      - message:
          text: 'DnsRecord: {dns_record}'
          args:
            dns_record:
              type: attribute
              key: dns_record
        severity: low
        rules:
          - type: has_attribute
            description: Check if dns_record attribute exists
            conditions:
              - type: constant
                name: attribute
                value: dns_record
            data_sources:
              - type: variable
                name: asset
                value: asset
        metadata:
          risks: ['Reconnaissance']
          visibility: ['T1578.002', 'T1578.003', 'T1578.004']
          detection: ['T1578.002', 'T1578.003', 'T1578.004']
          protection: ['T1590.002', 'T1596.001']
      - message:
          text: '[{resource_id}] Admin actions: {admin_services}'
          args:
            admin_services:
              type: attribute
              key: admin_services
            resource_id:
              type: attribute
              key: resource_id
        severity: high
        rules:
          - type: has_attribute
            description: Check if admin_services attribute exists
            conditions:
              - type: constant
                name: attribute
                value: admin_services
            data_sources:
              - type: variable
                name: asset
                value: asset
        metadata:
          risks: ['Powerful asset']
          visibility: ['T1136.003', 'T1578.002', 'T1578.003', 'T1578.004']
          detection: ['T1136.003', 'T1578.002', 'T1578.003', 'T1578.004']
          protection: ['T1078.001', 'T1078.004']
      - message:
          text: '[{resource_id}] Dangerous actions: {dangerous_actions}'
          args:
            dangerous_actions:
              type: attribute
              key: dangerous_actions
            resource_id:
              type: attribute
              key: resource_id
        severity: high
        rules:
          - type: has_attribute
            description: Check if dangerous_actions attribute exists
            conditions:
              - type: constant
                name: attribute
                value: dangerous_actions
            data_sources:
              - type: variable
                name: asset
                value: asset
        metadata:
          risks: ['Powerful asset']
          visibility: ['T1136.003', 'T1578.002', 'T1578.003', 'T1578.004']
          detection: ['T1136.003', 'T1578.002', 'T1578.003', 'T1578.004']
          protection: ['T1078.001', 'T1078.004']
      - message:
          text: '[{resource_id}] Poweruser actions: {poweruser_services}'
          args:
            poweruser_services:
              type: attribute
              key: poweruser_services
            resource_id:
              type: attribute
              key: resource_id
        severity: medium
        rules:
          - type: has_attribute
            description: Check if poweruser_services attribute exists
            conditions:
              - type: constant
                name: attribute
                value: poweruser_services
            data_sources:
              - type: variable
                name: asset
                value: asset
        metadata:
          risks: ['Powerful asset']
          visibility: ['T1485', 'T1537', 'T1578.002', 'T1578.003', 'T1578.004']
          detection: ['T1485', 'T1537', 'T1578.002', 'T1578.003', 'T1578.004']
          protection: ['T1190', 'T1530', 'T1580', 'T1619']
      - message:
          text: '[{bucket_name}] ACL BlockPublicAcls set to {attribute_value}'
          args:
            attribute_value:
              type: attribute
              key: acls.block_public_acls
            bucket_name:
              type: attribute
              key: name
        severity: low
        rules:
          - type: has_attribute
            description: Check if acls exists
            conditions:
              - type: constant
                name: attribute
                value: acls
            data_sources:
              - type: variable
                name: asset
                value: asset
          - type: has_attribute_equal
            description: Check if BlockPublicAcls is false
            conditions:
              - type: constant
                name: attribute_value
                value: false
            data_sources:
              - type: attribute
                name: attribute_value
                value: acls.block_public_acls
        metadata:
          risks: ['Application vulnerability']
          visibility: ['T1485', 'T1537', 'T1578.002', 'T1578.003', 'T1578.004']
          detection: ['T1485', 'T1537', 'T1578.002', 'T1578.003', 'T1578.004']
          protection: ['T1190', 'T1530', 'T1580', 'T1619']
      - message:
          text: '[{bucket_name}] ACL BlockPublicPolicy set to {attribute_value}'
          args:
            attribute_value:
              type: attribute
              key: acls.block_public_policy
            bucket_name:
              type: attribute
              key: name
        severity: low
        rules:
          - type: has_attribute
            description: Check if acls exists
            conditions:
              - type: constant
                name: attribute
                value: acls
            data_sources:
              - type: variable
                name: asset
                value: asset
          - type: has_attribute_equal
            description: Check if BlockPublicPolicy is false
            conditions:
              - type: constant
                name: attribute_value
                value: false
            data_sources:
              - type: attribute
                name: attribute_value
                value: acls.block_public_policy
        metadata:
          risks: ['Application vulnerability']
          visibility: ['T1485', 'T1537', 'T1578.002', 'T1578.003', 'T1578.004']
          detection: ['T1485', 'T1537', 'T1578.002', 'T1578.003', 'T1578.004']
          protection: ['T1190', 'T1530', 'T1580', 'T1619']
      - message:
          text: '[{bucket_name}] ACL IgnorePublicAcls set to {attribute_value}'
          args:
            attribute_value:
              type: attribute
              key: acls.ignore_public_acls
            bucket_name:
              type: attribute
              key: name
        severity: low
        rules:
          - type: has_attribute
            description: Check if acls exists
            conditions:
              - type: constant
                name: attribute
                value: acls
            data_sources:
              - type: variable
                name: asset
                value: asset
          - type: has_attribute_equal
            description: Check if IgnorePublicAcls is false
            conditions:
              - type: constant
                name: attribute_value
                value: false
            data_sources:
              - type: attribute
                name: attribute_value
                value: acls.ignore_public_acls
        metadata:
          risks: ['Application vulnerability']
          visibility: ['T1485', 'T1537', 'T1578.002', 'T1578.003', 'T1578.004']
          detection: ['T1485', 'T1537', 'T1578.002', 'T1578.003', 'T1578.004']
          protection: ['T1190', 'T1530', 'T1580', 'T1619']
      - message:
          text: '[{bucket_name}] ACL RestrictPublicBuckets set to {attribute_value}'
          args:
            attribute_value:
              type: attribute
              key: acls.restrict_public_buckets
            bucket_name:
              type: attribute
              key: name
        severity: low
        rules:
          - type: has_attribute
            description: Check if acls exists
            conditions:
              - type: constant
                name: attribute
                value: acls
            data_sources:
              - type: variable
                name: asset
                value: asset
          - type: has_attribute_equal
            description: Check if RestrictPublicBuckets is false
            conditions:
              - type: constant
                name: attribute_value
                value: false
            data_sources:
              - type: attribute
                name: attribute_value
                value: acls.restrict_public_buckets
        metadata:
          risks: ['Application vulnerability']
          visibility: ['T1485', 'T1537', 'T1578.002', 'T1578.003', 'T1578.004']
          detection: ['T1485', 'T1537', 'T1578.002', 'T1578.003', 'T1578.004']
          protection: ['T1190', 'T1530', 'T1580', 'T1619']
      - message:
          text: '[{bucket_name}] ACL: All Users: {rights}'
          args:
            rights:
              type: attribute
              key: acls.all_users_grants
            bucket_name:
              type: attribute
              key: name
        severity: high
        rules:
          - type: has_attribute
            description: Check if acls exists
            conditions:
              - type: constant
                name: attribute
                value: acls
            data_sources:
              - type: variable
                name: asset
                value: asset
          - type: has_attribute_not_equal
            description: Check if All Users can access to anything
            conditions:
              - type: constant
                name: attribute_value
                value: ''
            data_sources:
              - type: attribute
                name: attribute_value
                value: acls.all_users_grants
        metadata:
          risks: ['WAN reachable asset', 'Application vulnerability']
          visibility: ['T1485', 'T1537', 'T1578.002', 'T1578.003', 'T1578.004']
          detection: ['T1485', 'T1537', 'T1578.002', 'T1578.003', 'T1578.004']
          protection: ['T1190', 'T1530', 'T1580', 'T1619']
      - message:
          text: '[{bucket_name}] ACL: Any Authenticated Users: {rights}'
          args:
            rights:
              type: attribute
              key: acls.any_authenticated_users_grants
            bucket_name:
              type: attribute
              key: name
        severity: high
        rules:
          - type: has_attribute
            description: Check if acls exists
            conditions:
              - type: constant
                name: attribute
                value: acls
            data_sources:
              - type: variable
                name: asset
                value: asset
          - type: has_attribute_not_equal
            description: Check if Any Authenticated Users can access to anything
            conditions:
              - type: constant
                name: attribute_value
                value: ''
            data_sources:
              - type: attribute
                name: attribute_value
                value: acls.any_authenticated_users_grants
        metadata:
          risks: ['WAN reachable asset', 'Application vulnerability']
          visibility: ['T1485', 'T1537', 'T1578.002', 'T1578.003', 'T1578.004']
          detection: ['T1485', 'T1537', 'T1578.002', 'T1578.003', 'T1578.004']
          protection: ['T1190', 'T1530', 'T1580', 'T1619']
      - message:
          text: '[{service_name}] Public {service_type} with authentication'
          args:
            service_name:
              type: attribute
              key: name
            service_type:
              type: attribute
              key: aws_service
        severity: medium
        rules:
          - type: has_attribute_equal
            description: Check if the asset is public
            conditions:
              - type: constant
                name: attribute_value
                value: true
            data_sources:
              - type: attribute
                name: attribute_value
                value: public
          - type: has_attribute
            description: Check if authorization exists
            conditions:
              - type: constant
                name: attribute
                value: authorization
            data_sources:
              - type: variable
                name: asset
                value: asset
          - type: has_attribute_equal
            description: Check if the asset has_no_auth_endpoint is false
            conditions:
              - type: constant
                name: attribute_value
                value: false
            data_sources:
              - type: attribute
                name: attribute_value
                value: authorization.has_no_auth_endpoint
        metadata:
          risks: ['WAN reachable asset']
          visibility: ['T1485', 'T1537', 'T1578.002', 'T1578.003', 'T1578.004']
          detection: ['T1485', 'T1537', 'T1578.002', 'T1578.003', 'T1578.004']
          protection: ['T1190']
      - message:
          text: '[{service_name}] Public {service_type} without authentication'
          args:
            service_name:
              type: attribute
              key: name
            service_type:
              type: attribute
              key: aws_service
        severity: high
        rules:
          - type: has_attribute_equal
            description: Check if the asset is public
            conditions:
              - type: constant
                name: attribute_value
                value: true
            data_sources:
              - type: attribute
                name: attribute_value
                value: public
          - type: has_attribute
            description: Check if authorization exists
            conditions:
              - type: constant
                name: attribute
                value: authorization
            data_sources:
              - type: variable
                name: asset
                value: asset
          - type: has_attribute_equal
            description: Check if the asset has_no_auth_endpoint is true
            conditions:
              - type: constant
                name: attribute_value
                value: true
            data_sources:
              - type: attribute
                name: attribute_value
                value: authorization.has_no_auth_endpoint
        metadata:
          risks: ['WAN reachable asset', 'Application vulnerability']
          visibility: ['T1485', 'T1537', 'T1578.002', 'T1578.003', 'T1578.004']
          detection: ['T1485', 'T1537', 'T1578.002', 'T1578.003', 'T1578.004']
          protection: ['T1190']
      - message:
          text: '[{service_name}] Private {service_type} without authentication'
          args:
            service_name:
              type: attribute
              key: name
            service_type:
              type: attribute
              key: aws_service
        severity: high
        rules:
          - type: has_attribute_equal
            description: Check if the asset is public
            conditions:
              - type: constant
                name: attribute_value
                value: false
            data_sources:
              - type: attribute
                name: attribute_value
                value: public
          - type: has_attribute
            description: Check if authorization exists
            conditions:
              - type: constant
                name: attribute
                value: authorization
            data_sources:
              - type: variable
                name: asset
                value: asset
          - type: has_attribute_equal
            description: Check if the asset has_no_auth_endpoint is true
            conditions:
              - type: constant
                name: attribute_value
                value: true
            data_sources:
              - type: attribute
                name: attribute_value
                value: authorization.has_no_auth_endpoint
        metadata:
          risks: ['LAN reachable asset', 'Application vulnerability']
          visibility: ['T1485', 'T1537', 'T1578.002', 'T1578.003', 'T1578.004']
          detection: ['T1485', 'T1537', 'T1578.002', 'T1578.003', 'T1578.004']
          protection: ['T1040', 'T1046']
# https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_MySQL.html
# https://dev.mysql.com/doc/relnotes/mysql/8.0/en/
# https://dev.mysql.com/doc/relnotes/mysql/5.7/en/
      - message:
          text: '[{service_name}] Deprecated mysql engine version ({current_version})'
          args:
            service_name:
              type: attribute
              key: name
            current_version:
              type: attribute
              key: engine
        severity: high
        rules:
          - type: has_attribute
            description: Check if engine exists
            conditions:
              - type: constant
                name: attribute
                value: engine
            data_sources:
              - type: variable
                name: asset
                value: asset
          - type: engine_deprecated_version
            description: Check if mysql engine is not deprecated
            conditions:
              - type: constant
                name: engine_name
                value: mysql
              - type: constant
                name: versions
                value:
                  - '5.6.34'
                  - '5.7.16'
                  - '8.0.11'
            data_sources:
              - type: attribute
                name: attribute_value
                value: engine
        metadata:
          risks: ['LAN reachable asset', 'Application vulnerability', 'Sensitive asset']
# https://mariadb.com/kb/en/security/
# https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_MariaDB.html
      - message:
          text: '[{service_name}] Deprecated mariadb engine version ({current_version})'
          args:
            service_name:
              type: attribute
              key: name
            current_version:
              type: attribute
              key: engine
        severity: high
        rules:
          - type: has_attribute
            description: Check if engine exists
            conditions:
              - type: constant
                name: attribute
                value: engine
            data_sources:
              - type: variable
                name: asset
                value: asset
          - type: engine_deprecated_version
            description: Check if mariadb engine is not deprecated
            conditions:
              - type: constant
                name: engine_name
                value: mariadb
              - type: constant
                name: versions
                value:
                  - '10.2.43'
                  - '10.3.34'
                  - '10.4.24'
                  - '10.5.15'
                  - '10.6.7'
                  - '10.7.3'
                  - '10.8.1'
            data_sources:
              - type: attribute
                name: attribute_value
                value: engine
        metadata:
          risks: ['LAN reachable asset', 'Application vulnerability', 'Sensitive asset']
# https://www.postgresql.org/support/security/
      - message:
          text: '[{service_name}] Deprecated postgres engine version ({current_version})'
          args:
            service_name:
              type: attribute
              key: name
            current_version:
              type: attribute
              key: engine
        severity: high
        rules:
          - type: has_attribute
            description: Check if engine exists
            conditions:
              - type: constant
                name: attribute
                value: engine
            data_sources:
              - type: variable
                name: asset
                value: asset
          - type: engine_deprecated_version
            description: Check if postgres engine is not deprecated
            conditions:
              - type: constant
                name: engine_name
                value: postgres
              - type: constant
                name: versions
                value:
                  - '10.22'
                  - '11.17'
                  - '12.12'
                  - '13.8'
                  - '14.5'
            data_sources:
              - type: attribute
                name: attribute_value
                value: engine
        metadata:
          risks: ['LAN reachable asset', 'Application vulnerability', 'Sensitive asset']
# https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_SQLServer.html
      - message:
          text: '[{service_name}] Deprecated sqlserver-se (mssql) engine version ({current_version})'
          args:
            service_name:
              type: attribute
              key: name
            current_version:
              type: attribute
              key: engine
        severity: high
        rules:
          - type: has_attribute
            description: Check if engine exists
            conditions:
              - type: constant
                name: attribute
                value: engine
            data_sources:
              - type: variable
                name: asset
                value: asset
          - type: engine_deprecated_version
            description: Check if sqlserver-se engine is not deprecated
            conditions:
              - type: constant
                name: engine_name
                value: sqlserver-se
              - type: constant
                name: versions
                value:
                  - '12.00.5571.0.v1'
                  - '13.00.5820.21.v1'
                  - '14.00.3294.2.v1'
                  - '15.00.4043.16.v1'
            data_sources:
              - type: attribute
                name: attribute_value
                value: engine
        metadata:
          risks: ['LAN reachable asset', 'Application vulnerability', 'Sensitive asset']
# https://docs.aws.amazon.com/eks/latest/userguide/kubernetes-versions.html
      - message:
          text: '[{service_name}] Public RDS database'
          args:
            service_name:
              type: attribute
              key: name
        severity: high
        rules:
          - type: has_attribute_equal
            description: Check if the asset is public
            conditions:
              - type: constant
                name: attribute_value
                value: true
            data_sources:
              - type: attribute
                name: attribute_value
                value: public
          - type: has_attribute_equal
            description: Check if the asset is a RDS database
            conditions:
              - type: constant
                name: attribute_value
                value: RDS
            data_sources:
              - type: attribute
                name: attribute_value
                value: aws_service
        metadata:
          risks: ['WAN reachable asset', 'Sensitive asset']
      - message:
          text: '[{service_name}] Deprecated EKS Kubernetes version ({current_version})'
          args:
            service_name:
              type: attribute
              key: name
            current_version:
              type: attribute
              key: version
        severity: high
        rules:
          - type: has_attribute
            description: Check if version exists
            conditions:
              - type: constant
                name: attribute
                value: version
            data_sources:
              - type: variable
                name: asset
                value: asset
          - type: has_attribute_equal
            description: Check if the asset is a EKS cluster
            conditions:
              - type: constant
                name: attribute_value
                value: EKS
            data_sources:
              - type: attribute
                name: attribute_value
                value: aws_service
          - type: engine_deprecated_version
            description: Check if k8s version is not deprecated
            conditions:
              - type: constant
                name: engine_name
                value: kubernetes
              - type: constant
                name: versions
                value:
                  - '1.18'
            data_sources:
              - type: attribute
                name: attribute_value
                value: version
        metadata:
          risks: ['Application vulnerability', 'Sensitive asset']
      - message:
          text: '[{service_name}] Public EKS cluster'
          args:
            service_name:
              type: attribute
              key: name
        severity: high
        rules:
          - type: has_attribute_equal
            description: Check if the asset is public
            conditions:
              - type: constant
                name: attribute_value
                value: true
            data_sources:
              - type: attribute
                name: attribute_value
                value: public
          - type: has_attribute_equal
            description: Check if the asset is a EKS cluster
            conditions:
              - type: constant
                name: attribute_value
                value: EKS
            data_sources:
              - type: attribute
                name: attribute_value
                value: aws_service
        metadata:
          risks: ['WAN reachable asset', 'Sensitive asset']
      - message:
          text: '[{service_name}] An old SSH Key is attached'
          args:
            service_name:
              type: attribute
              key: name
        severity: medium
        rules:
          - type: has_attribute_equal
            description: Check if the asset is an EC2
            conditions:
              - type: constant
                name: attribute_value
                value: EC2
            data_sources:
              - type: attribute
                name: attribute_value
                value: aws_service
          - type: has_attribute_equal
            description: Check if old_attached_ssh_key is in the asset
            conditions:
              - type: constant
                name: attribute_value
                value: true
            data_sources:
              - type: attribute
                name: attribute_value
                value: old_attached_ssh_key
          - type: has_attribute_not_equal
            description: Check if the OS is not Windows
            conditions:
              - type: constant
                name: attribute_value
                value: 'Windows'
            data_sources:
              - type: attribute
                name: attribute_value
                value: operating_system
          - type: has_attribute_not_equal
            description: Check if the OS is not Windows with SQL Server Standard
            conditions:
              - type: constant
                name: attribute_value
                value: 'Windows with SQL Server Standard'
            data_sources:
              - type: attribute
                name: attribute_value
                value: operating_system
        metadata:
          risks: ['Application vulnerability']
      - message:
          text: '[{service_name}] EC2 with an Admin role'
          args:
            service_name:
              type: attribute
              key: name
        severity: high
        rules:
          - type: has_attribute_equal
            description: Check if the asset is an EC2
            conditions:
              - type: constant
                name: attribute_value
                value: EC2
            data_sources:
              - type: attribute
                name: attribute_value
                value: aws_service
          - type: has_attribute_not_equal
            description: Check if role_admin is in the asset
            conditions:
              - type: constant
                name: attribute_value
                value: ''
            data_sources:
              - type: attribute
                name: attribute_value
                value: role_admin
        metadata:
          risks: ['Powerful asset']
      - message:
          text: '[{service_name}] EC2 with an PowerUser role'
          args:
            service_name:
              type: attribute
              key: name
        severity: medium
        rules:
          - type: has_attribute_equal
            description: Check if the asset is an EC2
            conditions:
              - type: constant
                name: attribute_value
                value: EC2
            data_sources:
              - type: attribute
                name: attribute_value
                value: aws_service
          - type: has_attribute_not_equal
            description: Check if role_poweruser is in the asset
            conditions:
              - type: constant
                name: attribute_value
                value: ''
            data_sources:
              - type: attribute
                name: attribute_value
                value: role_poweruser
        metadata:
          risks: ['Powerful asset']
      - message:
          text: '[{service_name}] untrusted VPC peering'
          args:
            service_name:
              type: attribute
              key: name
        severity: high
        rules:
          - type: has_attribute_equal
            description: Check if the asset is an VPC
            conditions:
              - type: constant
                name: attribute_value
                value: VPC
            data_sources:
              - type: attribute
                name: attribute_value
                value: aws_service
          - type: has_attribute_equal
            description: Check if is_peering is True
            conditions:
              - type: constant
                name: attribute_value
                value: true
            data_sources:
              - type: attribute
                name: attribute_value
                value: is_peering
          - type: has_attribute_equal
            description: Check if is_trusted_peering is False
            conditions:
              - type: constant
                name: attribute_value
                value: false
            data_sources:
              - type: attribute
                name: attribute_value
                value: is_trusted_peering
        metadata:
          risks: ['Compromised asset']
      - message:
          text: '[{service_name}] Endpoint Service too open'
          args:
            service_name:
              type: attribute
              key: name
        severity: high
        rules:
          - type: has_attribute_equal
            description: Check if the asset is an VPC
            conditions:
              - type: constant
                name: attribute_value
                value: VPC
            data_sources:
              - type: attribute
                name: attribute_value
                value: aws_service
          - type: has_attribute_equal
            description: Check if is_endpoint_service is True
            conditions:
              - type: constant
                name: attribute_value
                value: true
            data_sources:
              - type: attribute
                name: attribute_value
                value: is_endpoint_service
          - type: has_attribute_equal
            description: Check if public is True
            conditions:
              - type: constant
                name: attribute_value
                value: true
            data_sources:
              - type: attribute
                name: attribute_value
                value: public
        metadata:
          risks: ['WAN reachable asset']
      - message:
          text: '[{service_name}] Endpoint Service has untrusted account in principals'
          args:
            service_name:
              type: attribute
              key: name
        severity: high
        rules:
          - type: has_attribute_equal
            description: Check if the asset is an VPC
            conditions:
              - type: constant
                name: attribute_value
                value: VPC
            data_sources:
              - type: attribute
                name: attribute_value
                value: aws_service
          - type: has_attribute_equal
            description: Check if is_endpoint_service is True
            conditions:
              - type: constant
                name: attribute_value
                value: true
            data_sources:
              - type: attribute
                name: attribute_value
                value: is_endpoint_service
          - type: has_attribute_equal
            description: Check if has_untrusted_accounts is True
            conditions:
              - type: constant
                name: attribute_value
                value: true
            data_sources:
              - type: attribute
                name: attribute_value
                value: has_untrusted_accounts
        metadata:
          risks: ['Compromised asset']
      - message:
          text: '[{service_name}] VPN endpoint'
          args:
            service_name:
              type: attribute
              key: name
        severity: high
        rules:
          - type: has_attribute_equal
            description: Check if the asset is an VPC
            conditions:
              - type: constant
                name: attribute_value
                value: VPC
            data_sources:
              - type: attribute
                name: attribute_value
                value: aws_service
          - type: has_attribute_equal
            description: Check if is_vpn is True
            conditions:
              - type: constant
                name: attribute_value
                value: true
            data_sources:
              - type: attribute
                name: attribute_value
                value: is_vpn
        metadata:
          risks: ['WAN reachable asset']
